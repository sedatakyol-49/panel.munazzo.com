var authenticated = 0;var authenticationchecked = 0;var hasPlatforms = 0;var statusTimer;var queuelist = [];var importlist = [];var details = [];var integrations = [];var xhrlog;var xhriban;var loadedstatus = [];var stealthmode = 0;$(document).ready(function () {    var _stealthmode = getParameterByName('stealthmode');    if (_stealthmode == "1") {        stealthmode = 1;    }    if (stealthmode == 1) {        $("main").css('padding-top', '0px');    }    $(".button-checkout").click(function (event) {        if (authenticated == 0) {            event.preventDefault();            unauthenticatedMessage();            return false;        } else {            return true;        }    });    $(".button-platform").click(function (event) {        if (authenticated == 1 && window.location.pathname.split("/").pop() != "store") {            $("#app-store").openModal();            loadAppStore();            event.preventDefault();            return false;        } else {            return true;        }    });    $(".button-orders").click(function (event) {        if (authenticated == 1) {            syncOrders();        }        event.preventDefault();        return false;    });    $(".button-import").click(function (event) {        var index = $(this).attr('index');        if (index == '')            index = 0;        $('.button-import-' + index).hide();        if (authenticated == 1) {            $.ajax({                url: "/api/startimport",                type: "GET",                data: {                    index: index                },                cache: false,                success: function (data) {                    if (data == "1") {                        $(window).scrollTop(0);                        clearInterval(statusTimer);                        statusInterval();                    } else {                        clearInterval(statusTimer);                        $('.process-window-' + index).hide();                    }                },                error: function (data) {                    console.log(data);                    $('.process-window-' + index).hide();                }            });        }        return false;    });    $('.tooltipped').tooltip({        delay: 50    });    $('select').material_select();    $('.modal-trigger').modal({        dismissible: true, // Modal can be dismissed by clicking outside of the modal        opacity: .5, // Opacity of modal background        in_duration: 300, // Transition in duration        out_duration: 200, // Transition out duration        starting_top: '4%', // Starting top style attribute        ending_top: '10%' // Ending top style attribute    });        if (getParameterByName("message") != "" && getParameterByName("message") != undefined) {        showMessageBox(getParameterByName("message"));    }});function autoCompleteAddress() {    $.ajax({        url: "https://restcountries.eu/rest/v1/all",        success: function (response) {            var countries;            var countrieseval = '';            for (var i = 0; i < response.length; i++) {                var countryline = '"' + response[i].nativeName + '": null';                if (countrieseval != '') {                    countrieseval += ', ' + countryline;                } else {                    countrieseval += countryline;                }                countryline = '"' + response[i].name + '": null';                if (countrieseval != '') {                    countrieseval += ', ' + countryline;                } else {                    countrieseval += countryline;                }            }            eval('countries = {' + countrieseval + '};');            $('input.autocountry').autocomplete({                data: countries            });        }    });}function checkAuthentication() {    if (authenticationchecked == 0) {        authenticationchecked = 1;        $.ajax({            url: "/api/authenticated",            type: "GET",            cache: false,            success: function (data) {                if (data == '0') {                    authenticated = 0;                } else {                    authenticated = 1;                    try {                        loadPlatforms();                    } catch (e) {                    }                }                try {                    startApp();                } catch (e) {                }            },            error: function (data) {                console.log(data);                authenticated = 0;            }        });    }}function startApp() {}function addToQueue(product) {    if (authenticated == 1) {        for (var importitem in importlist) {            if (importitem.product == product) {                return;            }        }        importlist.push({"product": product});        showQueue();    }}function removeFromQueue(product) {    if (authenticated == 1) {        importlist.pop({"product": product});        showQueue();    }}function showQueue() {    if (importlist.length > 0) {        $('#import-footer').css('bottom', '0rem');    } else {        $('#import-footer').css('bottom', '-5rem');    }    $('#queue-count').html(importlist.length);}function syncOrders() {    $('.order-sync-status').html('Bezig met synchroniseren van orders, dit kan enkele minuten duren.<br /><div class="progress"><div class="indeterminate"></div></div>');    $.ajax({        url: "/api/syncorders",        type: "GET",        cache: true,        success: function (data) {            window.location = '/app/orders';        },        error: function (data) {            console.log(data);        }    });}function unauthenticatedMessage() {    showMessageBox('Log in om de winkelwagen te bekijken.');}function showMessageBox(message) {    var $toastContent = $('<span>' + message + '</span>');    Materialize.toast($toastContent, 5000);}function getParameterByName(name) {    var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);    return match && decodeURIComponent(match[1].replace(/\+/g, ' '));}function AddToCart(offer, quantity) {    if (authenticated == 1) {        $.ajax({            url: "/api/addtocart",            type: "GET",            data: {                offer: offer,                quantity: quantity            },            cache: false,            success: function (data) {                var $toastContent = $('<span>' + data + '</span>');                Materialize.toast($toastContent, 5000);            },            error: function (data) {                console.log(data);            }        });    } else {        unauthenticatedMessage();    }}function loadPlatforms() {    if (authenticated == 1) {        $.ajax({            url: "/api/platforms",            type: "GET",            cache: false,            success: function (data) {                if (JSON.parse(data).length == '0') {                    hasPlatforms = 0;                } else {                    hasPlatforms = 1;                    integrations = JSON.parse(data);                }            },            error: function (data) {                console.log(data);            }        });    } else {        unauthenticatedMessage();    }}function addToPlatform(product) {    if (authenticated == 1) {        addToQueue(product);    } else {        unauthenticatedMessage();    }}function loadStatus(statusindex) {    /*var isStatusLoaded = 0;          $.each(loadedstatus, function (index, value) {     if (value.index == statusindex) {     isStatusLoaded = 1;     return;     }     });*/    //if (isStatusLoaded == 0) {    //    loadedstatus.push({index: statusindex});    var loaderhtml = '<div class="center-align" style="padding-top: 4rem;">';    loaderhtml += '<div class="preloader-wrapper small active">';    loaderhtml += '<div class="spinner-layer spinner-green-only">';    loaderhtml += '<div class="circle-clipper left">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div><div class="gap-patch">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div><div class="circle-clipper right">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    $(".imported-list-" + statusindex).html('<tr><td colspan="3">' + loaderhtml + '</td></tr>');    $.ajax({        url: "/api/importqueue",        type: "GET",        data: {            index: statusindex        },        cache: false,        success: function (data) {            queuelist = JSON.parse(data);            showQueueList(statusindex, 1);        },        error: function (data) {            console.log(data);        }    });    //}}function showQueueList(index, currentPage) {    var html = '';    var successCount = 0;    var errorCount = 0;    var pendingCount = 0;    var startIndex = (currentPage - 1) * 20;    var endIndex = currentPage * 20;    var appindex = index;    $.each(queuelist, function (index, log) {        if (index >= startIndex && index < endIndex) {            html += '<div class="row" style="border-bottom: 1px dotted rgba(0,0,0,0.1)">';        }        if (log.strStatus.indexOf('UPDATED') !== -1 || log.strStatus.indexOf('CREATED') !== -1) {            if (index >= startIndex && index < endIndex) {                html += '<div class="col s12 m9 l9"><i class="material-icons green-text">done</i>&nbsp;&nbsp;' + log.strStatus + '</div>';                html += '<div class="col s6 m1 l1" style="position: relative; top: 8px;">' + log.douPrice + '</div>';                html += '<div class="col s6 m2 l2 right-align"><i onclick="editProductInformation(' + log.intProductID + ', ' + appindex + ');" class="material-icons tooltipped" data-position="bottom" data-delay="0" data-tooltip="Wijzigen" style="cursor: pointer">mode_edit</i><a href="' + log.strLink + '" target="_blank" class="tooltipped" data-position="bottom" data-delay="0" data-tooltip="Bekijken"><i class="material-icons">present_to_all</i></a><a href="/app/deleteproduct/' + appindex + '/' + log.intProductID + '" class="red-text tooltipped" data-position="bottom" data-delay="0" data-tooltip="Verwijderen"><i class="material-icons">delete</i></a></div>';            }            successCount++;        } else {            if (index >= startIndex && index < endIndex) {                if (log.strStatus == "") {                    html += '<div class="col s12 m9 l9"><i class="material-icons orange-text" onclick="editProductInformation(' + log.intProductID + ', ' + appindex + ');" style="cursor: pointer;">queue</i>&nbsp;&nbsp;' + log.objProductIndex.strTitle + '&nbsp;<span onclick="editProductInformation(' + log.intProductID + ', ' + appindex + ');" style="text-decoration: underline; cursor: pointer;" class="red-text">(Omschrijving of afbeelding ontbreekt, klik hier om bij te werken)</span></div>';                } else {                    html += '<div class="col s12 m9 l9"><i class="material-icons red-text">error</i>&nbsp;&nbsp;' + log.strStatus + ' for ' + log.objProductIndex.strTitle + '</div>';                }                html += '<div class="col s6 m1 l1"></div>';                html += '<div class="col s6 m2 l2 right-align"><i onclick="editProductInformation(' + log.intProductID + ', ' + appindex + ');" class="material-icons tooltipped" data-position="bottom" data-delay="0" data-tooltip="Wijzigen" style="cursor: pointer">mode_edit</i><a href="/app/deleteproduct/' + appindex + '/' + log.intProductID + '" class="red-text tooltipped" data-position="bottom" data-delay="0" data-tooltip="Verwijderen"><i class="material-icons">delete</i></a></div>';            }            if (log.strStatus == "") {                pendingCount++;            } else {                errorCount++;            }        }        if (index >= startIndex && index < endIndex) {            html += '</div>';        }    });    $(".imported-list-" + index).html(html);    var detailshtml = successCount + ' producten zijn toegevoegd/bijgewerkt, maak een achtergrondtaak om deze producten te kunnen wijzigen.';    detailshtml += '<br />' + pendingCount + ' producten staan nog in wachtrij, start een product import om deze producten toe te voegen.';    detailshtml += '<br />' + errorCount + ' producten zijn verborgen/niet bijgewerkt, maak een achtergrondtaak aan om deze producten weer te geven op het moment ze weer op voorraad zijn.';    $(".imported-details-" + index).html(detailshtml);    var paginationhtml = '<li class="waves-effect"><a href="#" onclick="showQueueList(' + index + ', 1);"><i class="material-icons">chevron_left</i></a></li>';    var numberOfPages = queuelist.length / 20;    if (queuelist.length % 20 > 0) {        numberOfPages++;    }    if (numberOfPages < 6) {        for (i = 1; i <= numberOfPages; i++) {            if (i == currentPage) {                paginationhtml += '<li class="active"><a href="#" onclick="showQueueList(' + index + ', ' + i + ');">' + i + '</a></li>';            } else {                paginationhtml += '<li><a href="#" onclick="showQueueList(' + index + ', ' + i + ');">' + i + '</a></li>';            }        }    } else {        if (currentPage < 5) {            for (i = 1; i <= 5; i++) {                if (i == currentPage) {                    paginationhtml += '<li class="active"><a href="#" onclick="showQueueList(' + index + ', ' + i + ');">' + i + '</a></li>';                } else {                    paginationhtml += '<li><a href="#" onclick="showQueueList(' + index + ', ' + i + ');">' + i + '</a></li>';                }            }        } else {            var maxPage = currentPage + 2;            if (maxPage > numberOfPages) {                maxPage = numberOfPages;            }            for (i = currentPage - 2; i <= maxPage; i++) {                if (i == currentPage) {                    paginationhtml += '<li class="active"><a href="#" onclick="showQueueList(' + index + ', ' + i + ');">' + i + '</a></li>';                } else {                    paginationhtml += '<li><a href="#" onclick="showQueueList(' + index + ', ' + i + ');">' + i + '</a></li>';                }            }        }    }    paginationhtml += '<li class="waves-effect"><a href="#" onclick="showQueueList(' + index + ', ' + numberOfPages + ');"><i class="material-icons">chevron_right</i></a></li>';    $(".imported-pagination-" + index).html(paginationhtml);    if (numberOfPages < 2) {        $(".imported-pagination-" + index).hide();    } else {        $(".imported-pagination-" + index).show();    }}function statusInterval() {    clearInterval(statusTimer);    if (xhrlog && xhrlog.readystate != 4) {        xhrlog.abort();    }    if (authenticated == 1) {        xhrlog = $.ajax({            url: "/api/importlog",            type: "GET",            cache: false,            success: function (data) {                var apps = JSON.parse(data);                var isRunning = 0;                var totalpercentage = 0;                for (var appindex in apps) {                    var logs = apps[appindex];                    if (logs.intScriptRunning == 1) {                        isRunning++;                        var total = parseFloat(logs.intCreateCount) + parseFloat(logs.intUpdateCount);                        var percentage = parseInt(parseFloat(parseFloat(total - logs.intItemsLeft) / parseFloat(total)) * parseFloat(100));                        totalpercentage += percentage;                        var loaderhtml = '<span style="position: relative; left: 30px;">' + percentage + '%</span>';                        loaderhtml += '<div class="preloader-wrapper small active" style="position: relative; top: 14px;">';                        loaderhtml += '<div class="spinner-layer spinner-green-only">';                        loaderhtml += '<div class="circle-clipper left">';                        loaderhtml += '<div class="circle"></div>';                        loaderhtml += '</div><div class="gap-patch">';                        loaderhtml += '<div class="circle"></div>';                        loaderhtml += '</div><div class="circle-clipper right">';                        loaderhtml += '<div class="circle"></div>';                        loaderhtml += '</div>';                        loaderhtml += '</div>';                        loaderhtml += '</div>';                        var html = '<div class="left">';                        html += parseFloat(total - logs.intItemsLeft) + " van " + total;                        html += loaderhtml;                        html += '</div>';                        html += '<div class="clearfix"></div>';                        $('.process-status-' + appindex).html(html);                        $('.process-status-' + appindex).fadeIn('fast');                        $('.process-window-' + appindex).fadeIn('fast');                        $('.button-import-' + appindex).hide();                        $('.imported-list-' + appindex).hide();                        $('.imported-details-' + appindex).hide();                        $('.imported-pagination-' + appindex).hide();                        statusTimer = setInterval(statusInterval, 5000);                    } else {                        $('.process-window-' + appindex).hide();                        $('.process-status-' + appindex).hide();                        $('.imported-list-' + appindex).show();                        $('.imported-details-' + appindex).show();                        $('.imported-pagination-' + appindex).show();                        $('.button-import-' + appindex).fadeIn('fast');                        loadStatus(appindex);                    }                    appindex++;                }            },            error: function (data) {                console.log(data);                $('.button-import').fadeIn('fast');            }        });    }}function appStoreCategoryIcon(category) {    if (category == "API") {        return "perm_identity";    }    if (category == "App") {        return "snooze";    }    if (category == "Marktplaats") {        return "business";    }    if (category == "Product Feed") {        return "track_changes";    }    if (category == "Webshop Integratie") {        return "hearing";    }    return "insert_chart";}function loadAppStore() {    var loaderhtml = '<div class="center-align" style="padding-top: 4rem;">';    loaderhtml += '<div class="preloader-wrapper small active">';    loaderhtml += '<div class="spinner-layer spinner-green-only">';    loaderhtml += '<div class="circle-clipper left">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div><div class="gap-patch">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div><div class="circle-clipper right">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    $("#store-list").html(loaderhtml);    $.ajax({        url: "/api/storecategories",        type: "GET",        cache: false,        success: function (data) {            var logs = JSON.parse(data);            var html = '';            var all = 0;            $.each(logs, function (index, log) {                html += '<div data-selector="categories" data-categories="' + log.strCategory + '" onclick="filterStoreCategories(\'' + log.strCategory + '\')">';                html += '<label class="dashboard-categories-list" category="' + log.strCategory + '"><i class="material-icons">' + appStoreCategoryIcon(log.strCategory) + "</i>" + log.strCategory + ' (' + log.intCount + ')</label>';                html += '</div>';                all += parseInt(log.intCount);            });            $("#categories-list").html('<div data-selector="categories" data-categories="Alles" onclick="filterStoreCategories(\'Alles\')"><label class="dashboard-categories-list active" category="Alles"><i class="material-icons">' + appStoreCategoryIcon('Alles') + ' </i>Alles (' + all + ')</label></div>' + html);        },        error: function (data) {            console.log(data);        }    });    $.ajax({        url: "/api/store",        type: "GET",        cache: false,        success: function (data) {            var logs = JSON.parse(data);            var html = '';            var all = 0;            $.each(logs, function (index, log) {                html += '<div class="content col l4 m6 s12 componentitem" category="' + log.strCategory + '" title="' + log.strTitle + '">';                html += '<div class="card">';                html += '<div class="componentitem-icon">';                html += '<img src="' + log.strIcon + '" class="tooltipped" data-position="bottom" data-tooltip="' + log.strCategory + '">';                html += '</div>';                html += '<div class="row center-align">' + log.strTitle;                /*if (log.strInstall != null && log.strInstall != "" && authenticated == 1) {                 html += '<br /><a href="' + log.strInstall + '" class="waves-effect waves-light btn yellow darken-2 grey-text text-darken-4">Installeren</a>';                 }*/                if (log.strButton != null && log.strButton != "") {                    html += '<br />' + log.strButton;                }                html += '</div>';                html += '</div>';                //html += '<div class="rank"><span class="rating" title="5 van de 5 sterren"><i class="material-icons">star</i><i class="material-icons">star</i><i class="material-icons">star</i><i class="material-icons">star</i><i class="material-icons">star</i></span></div>';                html += '<i class="material-icons appstore-category-icon">' + appStoreCategoryIcon(log.strCategory) + '</i>';                html += '<a href="/app/store/' + log.strUrl + '" class="link">Lees meer</a>';                html += '</div>';            });            $("#store-list").html(html);            filterStoreCategories('Webshop Integratie');        },        error: function (data) {            console.log(data);        }    });    $("#search-appstore").on('change keydown paste input', function () {        var _term = $(this).val();        $(".componentitem").each(function (index) {            if ($(this).attr('category').toLowerCase().indexOf(_term.toLowerCase()) !== -1 || $(this).attr('title').toLowerCase().indexOf(_term.toLowerCase()) !== -1) {                $(this).show();            } else {                $(this).hide();            }        });    });}function filterStoreCategories(category) {    $(".dashboard-categories-list").each(function (index) {        $(this).removeClass('active');        if ($(this).attr('category') == category) {            $(this).addClass('active');        }    });    $(".componentitem").each(function (index) {        if ($(this).attr('category') == category) {            $(this).show();        } else {            if (category == "Alles") {                $(this).show();            } else {                $(this).hide();            }        }    });}function processImportList() {    var loaderhtml = '<div class="center-align" style="padding-top: 1rem; padding-right: 1rem;">';    loaderhtml += '<div class="preloader-wrapper small active">';    loaderhtml += '<div class="spinner-layer spinner-green-only">';    loaderhtml += '<div class="circle-clipper left">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div><div class="gap-patch">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div><div class="circle-clipper right">';    loaderhtml += '<div class="circle"></div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    loaderhtml += '</div>';    $('.start-now-container').html(loaderhtml);    var _products = '';    for (var importitem in importlist) {        if (_products != '') {            _products += '-';        }        _products += importlist[importitem].product;    }    $.ajax({        url: "/api/addtoqueue",        type: "GET",        data: {            products: _products        },        cache: false,        success: function (data) {            window.location = '/app/import';        },        error: function (data) {            console.log(data);        }    });}function loadDetail(id, offer, stock, mindelivery, maxdelivery) {    if (authenticated == 1) {        if (viewmode == 1) {            $("#detailmodal_" + offer).openModal();        }        var detail = findDetail(id);        if (detail === undefined) {            if (xhrdetail && xhrdetail.readystate != 4) {                xhrdetail.abort();            }            xhrdetail = $.ajax({                url: "/api/detail",                type: "GET",                data: {                    id: id                },                cache: true,                success: function (data) {                    details.push(JSON.parse(data));                    showDetail(id, offer, JSON.parse(data), stock, mindelivery, maxdelivery);                },                error: function (data) {                    console.log(data);                }            });        } else {            showDetail(id, offer, detail, stock, mindelivery, maxdelivery);        }    } else {        $('#detail_' + offer).html('<div class="center-align" style="padding-top: 4rem;">Log in voor meer details.</div>');    }}function addOfferToCart(offer) {    AddToCart(offer, parseInt($('#quantity_' + offer).val()));}function addOneOfferToCart(offer) {    AddToCart(offer, 1);}function showDetail(id, offer, detail, stock, mindelivery, maxdelivery) {    if (detail.arrXml != undefined) {        var html = '<div class="row">';        html += '<div class="col s12">';        html += '<ul class="tabs">';        html += '<li class="tab col s4"><a href="#cart_' + offer + '">Informatie</a></li>';        html += '<li class="tab col s4"><a href="#description_' + offer + '">Omschrijving</a></li>';        html += '<li class="tab col s4"><a href="#specifications_' + offer + '">Specificaties</a></li>';        html += '</ul>';        html += '</div>';        html += '<div id="cart_' + offer + '" class="col s12">';        html += '<div class="collection">';        html += '<a href="#!" class="collection-item" style="height: 4rem; overflow: hidden; text-overflow: ellipsis;">' + detail.arrXml.strDescrShort + '</a>';        //html += '<a href="#!" class="collection-item">Merk<span class="badge">' + detail.arrXml.strBrand + '</span></a>';        //html += '<a href="#!" class="collection-item">Categorie<span class="badge"></span></a>';        //html += '<a href="#!" class="collection-item">SKU<span class="badge">' + detail.arrXml.sku + '</span></a>';        if (authenticated == 1) {            html += '<a href="#!" class="collection-item">Levertijd<span class="badge"><i class="material-icons grey-text" style="font-size: 1.2rem; margin-right: 0.4rem; position: relative; top: 0.2rem;">today</i>';            if (maxdelivery == 0) {                if (mindelivery == 0) {                    html += '<span class="badge-delivery">3 - 5 Dagen</span>';                } else {                    if (mindelivery == 24) {                        html += '<span class="badge-delivery badge-fast-delivery">24H</span>';                    } else {                        var Days = mindelivery / 24;                        html += '<span class="badge-delivery">' + Days + ' Dagen</span>';                    }                }            } else {                if (mindelivery == 0) {                    if (maxdelivery == 24) {                        html += '<span class="badge-delivery badge-fast-delivery">24H</span>';                    } else {                        var Days = maxdelivery / 24;                        html += '<span class="badge-delivery">' + Days + ' Dagen</span>';                    }                } else {                    var MinDays = parseInt(mindelivery / 24);                    var MaxDays = parseInt(maxdelivery / 24);                    if (MinDays == 0) {                        if (MaxDays == 1) {                            html += '<span class="badge-delivery badge-fast-delivery">24H</span>';                        } else {                            html += '<span class="badge-delivery">' + MaxDays + ' Dagen</span>';                        }                    } else {                        html += '<span class="badge-delivery">' + MinDays + ' - ' + MaxDays + ' Dagen</span>';                    }                }            }            html += '</span></a>';            html += '<a href="#!" class="collection-item">Voorraad<span class="badge">' + stock + '</span></a>';            html += '<a href="#!" class="collection-item">EAN<span class="badge">' + detail.arrEan[0] + '</span></a>';        }        html += '</div>';        if (authenticated == 1) {            html += '<div class="row right" style="width: 100%; margin-top: 2rem;">';            html += '<div class="input-field col l4 m6 s12"><input id="quantity_' + offer + '" type="number" min="1" max="' + stock + '" class="validate" value="1"><label for="icon_prefix">Aantal</label></div>';            html += '<div class="input-field col l8 m6 s12"><a class="waves-effect waves-light btn-large col s12 m12 l12" onclick="addOfferToCart(' + offer + ')"><i class="material-icons left">shopping_basket</i>In winkelwagen</a></div>';            html += '</div>';        }        html += '</div>';        html += '<div id="description_' + offer + '" class="col s12 center-align"><p>' + detail.arrXml.strDescrLong + '</p></div>';        html += '<div id="specifications_' + offer + '" class="col s12 center-align"><p>';        for (var spec in detail.arrXml.arrSpecs) {            html += '<h5 class="header">' + detail.arrXml.arrSpecs[spec].strName + '</h5>';            html += '<table class="highlight"><thead><tr><th data-field="name">Specificatie</th><th data-field="value">Waarde</th></tr></thead><tbody>';            for (var feature in detail.arrXml.arrSpecs[spec].arrFeatures) {                html += '<tr><td>' + detail.arrXml.arrSpecs[spec].arrFeatures[feature].strName + '</td><td>' + detail.arrXml.arrSpecs[spec].arrFeatures[feature].strValue + '</td></tr>';            }            html += '</tbody></table>';        }        html += '</p></div>';        html += '</div>';        $('#detail_' + offer).html(html);        $('#quantity_' + offer).focus();        $('ul.tabs').tabs();        var gallery = '<div class="carousel carousel-slider center" data-indicators="true" style="max-height: 24rem;">';        gallery += '<div class="carousel-item" style="max-height: 24rem; max-width: 100%; text-align: center; line-height: 100%;">';        gallery += '<img src="' + detail.objProductInformation.strImageURL + '" style="width: auto; max-width: 100%; max-height: 24rem; vertical-align: middle;" />';        gallery += '</div>';        for (var image in detail.arrXml.arrImages) {            gallery += '<div class="carousel-item" style="max-height: 24rem; max-width: 100%; text-align: center; line-height: 100%;">';            gallery += '<img src="' + detail.arrXml.arrImages[image] + '" style="width: auto; max-width: 100%; max-height: 24rem; vertical-align: middle;" />';            gallery += '</div>';        }        gallery += '</div>';        $('#gallery_' + offer).html(gallery);        $('.carousel.carousel-slider').carousel({full_width: true});    } else {        var html = '<div class="row">';        html += '<div id="cart_' + offer + '" class="col s12">';        html += '<p><div class="collection">';        if (authenticated == 1) {            html += '<a href="#!" class="collection-item">Voorraad<span class="badge">' + stock + '</span></a>';            html += '<a href="#!" class="collection-item">Levertijd<span class="badge">3 tot 5 dagen</span></a>';            html += '<a href="#!" class="collection-item">EAN<span class="badge">' + detail.strBarCode + '</span></a>';        }        html += '</div></p>';        if (authenticated == 1) {            html += '<div class="row right" style="width: 100%; margin-top: 2rem;">';            html += '<div class="input-field col l4 m6 s12"><input id="quantity_' + offer + '" type="number" min="1" max="' + stock + '" class="validate" value="1"><label for="icon_prefix">Aantal</label></div>';            html += '<div class="input-field col l8 m6 s12"><a class="waves-effect waves-light btn-large" onclick="addOfferToCart(' + offer + ')"><i class="material-icons left">shopping_basket</i>In winkelwagen</a></div>';            html += '</div>';        }        html += '</div>';        html += '</p></div>';        html += '</div>';        $('#detail_' + offer).html(html);        $('#quantity_' + offer).focus();    }    Materialize.updateTextFields();}function findDetail(id) {    var detail = undefined;    $.each(details, function (index, value) {        if (value.intProductID == id) {            detail = value;            return;        }    });    return detail;}