{"version":3,"sources":["webpack:///./node_modules/ng2-listview-crud/index.js","webpack:///./node_modules/ng2-timeline/index.js","webpack:///./src/app/components/ng2-newslist/ng2newslist.component.html","webpack:///./src/app/components/ng2-newslist/ng2newslist.component.scss","webpack:///./src/app/components/ng2-newslist/ng2newslist.component.ts","webpack:///./src/app/components/ng2-newslist/ng2newslist.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAuB;AACc;AACM;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,iCAAiC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,oCAAoC,EAAE,UAAU,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,iCAAiC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B,gCAAgC,EAAE,UAAU,iCAAiC;AAC7E,0BAA0B;AAC1B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,gCAAgC,EAAE,UAAU,iCAAiC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL,iQAAiQ,qBAAqB,sPAAsP,yDAAyD,eAAe,ypBAAypB,QAAQ;AACrvC;AACA,4HAA4H,oBAAoB,EAAE,gBAAgB,YAAY,eAAe,kBAAkB,gBAAgB,EAAE,YAAY,WAAW,EAAE,0BAA0B,uBAAuB,aAAa,EAAE,mDAAmD,+BAA+B,aAAa,EAAE,qBAAqB,kBAAkB,kBAAkB,6BAA6B,EAAE,sDAAsD,uBAAuB,2BAA2B,EAAE,yCAAyC,gBAAgB,EAAE,qBAAqB,oBAAoB,EAAE,UAAU,uBAAuB,EAAE,YAAY,eAAe,EAAE,kBAAkB,iBAAiB,EAAE;AACxyB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,oBAAoB,mFAAqC;AACzD,eAAe,6EAA+B;AAC9C;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,8CAA8C,WAAW;;AAEjD;;;;;;;;;;;;;;;;;AChQ6B;AACd;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,kFAAkF,oGAAoG,+BAA+B,2EAA2E,sCAAsC,oEAAoE,eAAe,gDAAgD,iBAAiB;AAC1d,qCAAqC,kBAAkB,sBAAsB,oBAAoB,EAAE,mBAAmB,QAAQ,WAAW,oBAAoB,gBAAgB,YAAY,2BAA2B,YAAY,sBAAsB,EAAE,iBAAiB,qBAAqB,oBAAoB,wBAAwB,EAAE,8CAA8C,gBAAgB,gBAAgB,EAAE,uCAAuC,aAAa,aAAa,cAAc,mBAAmB,kBAAkB,oBAAoB,oBAAoB,WAAW,WAAW,qBAAqB,2BAA2B,cAAc,uBAAuB,EAAE,mCAAmC,2BAA2B,cAAc,2BAA2B,oBAAoB,oBAAoB,oBAAoB,kBAAkB,EAAE,uBAAuB,aAAa,EAAE,0BAA0B,sCAAsC,EAAE,kBAAkB,+BAA+B,EAAE;AACv/B,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,eAAe,6EAA+B;AAC9C,kBAAkB,yFAA2C;AAC7D;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,0CAA0C,WAAW;;AAE7C;;;;;;;;;;;;AC/DR,kDAAkD,kLAAkL,eAAe,4CAA4C,eAAe,yFAAyF,cAAc,KAAK,eAAe,wBAAwB,iBAAiB,yG;;;;;;;;;;;ACAld,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;GAEG;AAC4C;AAM/C;IAAA;IAEA,CAAC;IADgB;QAAd,2DAAK,CAAC,MAAM,CAAC;kCAAO,KAAK;uDAAS;IADxB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAC,eAAe;;;SAGzB,CAAC;OACW,oBAAoB,CAEhC;IAAD,2BAAC;CAAA;AAFgC;;;;;;;;;;;;;;;;;;;;;;;;ACTjC;;GAEG;AACoC;AACM;AACgB;AAQ7D;IAAA;IAEA,CAAC;IAFY,WAAW;QAPvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAC,CAAC,2EAAoB,CAAC;YACnC,OAAO,EAAC,CAAC,2EAAoB,CAAC;SAC/B,CAAC;OACW,WAAW,CAEvB;IAAD,kBAAC;CAAA;AAFuB","file":"widgets-main-main-module~widgets-modules-accountplatform-module~widgets-modules-platformsettings-mod~6213483a.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n/**\r\n * Created by mohma on 7/27/2017.\r\n */\r\nvar Ng2ListViewCRUDComponent = (function () {\r\n    function Ng2ListViewCRUDComponent() {\r\n        this.value = \"\";\r\n        this.search = \"\";\r\n        this.opType = \"Add\";\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.ngOnChanges = function (changes) {\r\n        this.subData = this.items;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.ngOnInit = function () {\r\n        this.properties.icon += \" fa-fw\";\r\n        this.subData = this.items;\r\n        this.path = \"\";\r\n        for (var /** @type {?} */ i = 0; i < this.properties.path.length; i++) {\r\n            this.path += this.properties.path[i];\r\n            if (i !== this.properties.path.length - 1) {\r\n                this.path += \".\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.ngAfterViewInit = function () {\r\n        var /** @type {?} */ self = this;\r\n        $('ul.ng2-listview').on('click', 'li', function () {\r\n            $('.selected').removeClass('selected');\r\n            if ($(this).hasClass('selected')) {\r\n                $(this).removeClass('selected');\r\n            }\r\n            else {\r\n                self.selectedIndex = $(this).attr('id');\r\n                $(this).addClass('selected');\r\n                self.properties.onSelect(self.items[self.selectedIndex]);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.onChangeListener = function ($event) {\r\n        var /** @type {?} */ self = this;\r\n        if (this.search === \"\") {\r\n            this.subData = this.items;\r\n            return;\r\n        }\r\n        this.properties.onSearchChange(self.search);\r\n        var /** @type {?} */ result = this.items.filter(function (lhs) {\r\n            var /** @type {?} */ data = lhs;\r\n            if (self.properties.dataIsObject) {\r\n                if (!lhs[self.properties.path[0]])\r\n                    return false;\r\n                data = lhs[self.properties.path[0]];\r\n                for (var /** @type {?} */ i = 1; i < self.properties.path.length; i++) {\r\n                    if (data[self.properties.path[i]])\r\n                        data = data[self.properties.path[i]];\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return data.match(self.search);\r\n        });\r\n        this.subData = result;\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @param {?} path\r\n     * @param {?} newValue\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.changeJSONValue = function (obj, path, newValue) {\r\n        var /** @type {?} */ parts = path.split('.');\r\n        while (parts.length > 1 && (obj = obj[parts.shift()])) { }\r\n        \r\n        obj[parts.shift()] = newValue;\r\n        return obj;\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.getJSONValue = function (obj) {\r\n        if (!obj[this.properties.path[0]])\r\n            return \"Not Available\";\r\n        var /** @type {?} */ data = obj[this.properties.path[0]];\r\n        for (var /** @type {?} */ i = 1; i < this.properties.path.length; i++) {\r\n            if (!data[this.properties.path[i]])\r\n                return \"Not Available\";\r\n            data = data[this.properties.path[i]];\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.append = function (value) {\r\n        var /** @type {?} */ data = value;\r\n        if (this.properties.dataIsObject) {\r\n            data = \"\";\r\n            var /** @type {?} */ closing = \"\";\r\n            for (var /** @type {?} */ i = 0; i < this.properties.path.length; i++) {\r\n                data += \"{\\\"\";\r\n                data += this.properties.path[i] + \"\\\":\";\r\n                closing += \"}\";\r\n            }\r\n            data += ('\"' + value + '\"' + closing);\r\n            try {\r\n                data = JSON.parse(data);\r\n            }\r\n            catch (e) {\r\n                throw e;\r\n            }\r\n        }\r\n        this.items.push(data);\r\n        return data;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.onAddClickListener = function () {\r\n        if (this.value.length !== 0 && this.opType === \"Add\") {\r\n            if (this.properties.onAdd && this.properties.onAdd(this.append(this.value))) {\r\n                this.value = \"\";\r\n            }\r\n            else {\r\n                console.log(\"Function onAdd not found\");\r\n            }\r\n        }\r\n        else if (this.value.length !== 0 && this.opType === \"Edit\") {\r\n            if (this.properties.onAdd && this.properties.onUpdate(this.items[this.selectedIndex], this.value)) {\r\n                if (!this.properties.dataIsObject) {\r\n                    this.items[this.selectedIndex] = this.value;\r\n                }\r\n                else {\r\n                    this.changeJSONValue(this.items[this.selectedIndex], this.path, this.value);\r\n                }\r\n                this.value = \"\";\r\n                this.opType = \"Add\";\r\n            }\r\n            else {\r\n                console.log(\"Function onEdit not found\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.onEditClickListener = function (index) {\r\n        this.selectedIndex = index;\r\n        if (!this.properties.dataIsObject)\r\n            this.value = this.items[this.selectedIndex];\r\n        else {\r\n            var /** @type {?} */ data = this.items[this.selectedIndex][this.properties.path[0]];\r\n            for (var /** @type {?} */ i = 1; i < this.properties.path.length; i++) {\r\n                if (!data[this.properties.path[i]]) {\r\n                    return null;\r\n                }\r\n                data = data[this.properties.path[i]];\r\n            }\r\n            this.value = data;\r\n        }\r\n        this.opType = \"Edit\";\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.delete = function (index) {\r\n        this.items.splice(index, 1);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.get = function (index) {\r\n        return this.items[index];\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.onDeleteClickListener = function (index) {\r\n        this.selectedIndex = index;\r\n        if (this.properties.onDelete && this.properties.onDelete(this.get(this.selectedIndex))) {\r\n            this.delete(this.selectedIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    Ng2ListViewCRUDComponent.prototype.getData = function (item) {\r\n        if (!this.properties.dataIsObject) {\r\n            return item;\r\n        }\r\n        return this.getJSONValue(item);\r\n    };\r\n    return Ng2ListViewCRUDComponent;\r\n}());\r\nNg2ListViewCRUDComponent.decorators = [\r\n    { type: Component, args: [{\r\n                template: \"<div class=\\\"panel\\\"> <div class=\\\"panel-heading\\\" [style.background]=\\\"properties['headingBackgroundColor']\\\" [style.color]=\\\"properties['headingFontColor']\\\"> <i [class]=\\\"properties['icon']\\\" style=\\\"margin-right: 10px\\\"></i>{{properties['label']}} </div> <input type=\\\"text\\\" class=\\\"form-control searchBoxListView\\\" placeholder=\\\"Search....\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"onChangeListener($event)\\\"> <div class=\\\"panel-body\\\"> <ul class=\\\"ng2-listview\\\"> <li *ngFor=\\\"let item of subData; index as i\\\" class=\\\"ng2-listview-item\\\" [id]=\\\"i\\\" > {{getData(item)}} <div class=\\\"pull-right action-buttons\\\"> <a href=\\\"javascript:void(0)\\\" (click)=\\\"onEditClickListener(i)\\\" [hidden]=\\\"!properties['edit']\\\"><i class=\\\"fa fa-pencil fa-fw\\\"></i> </a> <a href=\\\"javascript:void(0)\\\" (click)=\\\"onDeleteClickListener(i)\\\" [hidden]=\\\"!properties['remove']\\\"><i class=\\\"fa-fw fa fa-remove\\\"></i> </a> </div> </li> </ul> </div> <div class=\\\"panel-footer\\\" [hidden]=\\\"!properties['add']\\\"> <div class=\\\"input-group\\\"> <input type=\\\"text\\\" class=\\\"form-control input-md\\\" placeholder=\\\"Add\\\" [(ngModel)]=\\\"value\\\"> <span class=\\\"input-group-btn\\\"> <button class=\\\"btn btn-success btn-md\\\" id=\\\"btn-todo\\\" (click)=\\\"onAddClickListener()\\\">{{opType}}</button> </span> </div> </div> </div> \",\r\n                selector: 'ng2-listview-crud',\r\n                styles: [\"/** NG2-Listview-CRUD Author: Mohammed Rashid Github: https://github.com/mohdrashid */ .selected { background: bisque; } .ng2-listview { padding: 0; margin: -15px; background: #fff; color: #5f6468; } #checkbox { margin: 0; } .ng2-listview .checkbox { display: inline-block; margin: 0px; } .panel-body input[type=checkbox]:checked + label { text-decoration: line-through; color: #777; } .ng2-listview-item { list-style: none; line-height: 0.9; padding: 14px 15px 8px 15px; } .ng2-listview-item:hover, a.ng2-listview-item:focus { text-decoration: none; background-color: #f6f6f6; } .ng2-listview-item .trash .glyph:hover { color: #ef4040; } .searchBoxListView { border-radius: 0px; } ul li a { text-decoration: none; } ul li div { display: none; } ul li:hover div { display: inline; } \"]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nNg2ListViewCRUDComponent.ctorParameters = function () { return []; };\r\nNg2ListViewCRUDComponent.propDecorators = {\r\n    'properties': [{ type: Input, args: ['properties',] },],\r\n    'items': [{ type: Input, args: ['data',] },],\r\n};\n\nvar Ng2ListViewCRUD = (function () {\r\n    function Ng2ListViewCRUD() {\r\n    }\r\n    return Ng2ListViewCRUD;\r\n}());\r\nNg2ListViewCRUD.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule, FormsModule, ReactiveFormsModule,\r\n                ],\r\n                declarations: [\r\n                    Ng2ListViewCRUDComponent\r\n                ],\r\n                exports: [\r\n                    Ng2ListViewCRUDComponent\r\n                ]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nNg2ListViewCRUD.ctorParameters = function () { return []; };\n\nexport { Ng2ListViewCRUD };\n","import { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * Created by mohma on 7/31/2017.\r\n */\r\nvar Ng2TimelineComponent = (function () {\r\n    function Ng2TimelineComponent() {\r\n    }\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    Ng2TimelineComponent.prototype.onClick = function (index) {\r\n        if (this.listener) {\r\n            if (this.listener(this.items[index])) {\r\n                this.items[index]['complete'] = !this.items[index]['complete'];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Ng2TimelineComponent.prototype.ngOnInit = function () {\r\n    };\r\n    return Ng2TimelineComponent;\r\n}());\r\nNg2TimelineComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'ng2-timeline',\r\n                template: \"<ul class=\\\"timeline\\\"> <li *ngFor=\\\"let item of items; index as i\\\"> <a href=\\\"javascript:void(0)\\\" (click)=\\\"onClick(i)\\\"> <div class=\\\"timeline-badge {{item['complete']?'primary':''}}\\\" [innerHTML]=\\\"item['icon']\\\"> </div> </a> <div class=\\\"timeline-panel {{item['complete']?'completedEvent':''}}\\\"> <div class=\\\"timeline-heading\\\"> <h4 class=\\\"timeline-title\\\">{{item['title']}}</h4> </div> <div class=\\\"timeline-body\\\"> <p>{{item['content']}}</p> </div> </div> </li> </ul> \",\r\n                styles: [\".timeline { list-style: none; padding: 20px 0 20px; position: relative; } .timeline:before { top: 0; bottom: 0; position: absolute; content: \\\" \\\"; width: 2px; background-color: #e9ecf2; left: 25px; margin-right: -1.5px; } .timeline > li { margin-bottom: 20px; position: relative; box-sizing: border-box; } .timeline > li:before, .timeline > li:after { content: \\\" \\\"; display: table; } .timeline > li > a > .timeline-badge { color: #fff; width: 46px; height: 46px; line-height: 51px; font-size: 1.4em; text-align: center; position: absolute; top: 16px; left: 0px; margin-right: -25px; background-color: #999999; z-index: 100; border-radius: 9999px; } .timeline > li > .timeline-panel { width: calc( 100% - 65px); float: right; border: 1px solid #edeeed; border-radius: 2px; padding: 10px 20px; position: relative; box-shadow: none; } .timeline > li:after { clear: both; } .timeline-badge.primary { background-color: #30a5ff !important; } .completedEvent { text-decoration: line-through; } \"]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nNg2TimelineComponent.ctorParameters = function () { return []; };\r\nNg2TimelineComponent.propDecorators = {\r\n    'items': [{ type: Input, args: ['data',] },],\r\n    'listener': [{ type: Input, args: ['completeListener',] },],\r\n};\n\nvar Ng2Timeline = (function () {\r\n    function Ng2Timeline() {\r\n    }\r\n    return Ng2Timeline;\r\n}());\r\nNg2Timeline.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                declarations: [Ng2TimelineComponent],\r\n                providers: [],\r\n                exports: [Ng2TimelineComponent]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nNg2Timeline.ctorParameters = function () { return []; };\n\nexport { Ng2Timeline };\n","module.exports = \"<div *ngFor=\\\"let item of items;index as i\\\" class=\\\"article border-bottom\\\">\\r\\n<div class=\\\"col-xs-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-2 col-md-2 date\\\">\\r\\n      <div class=\\\"large\\\">{{item['large']}}</div>\\r\\n      <div class=\\\"text-muted\\\">{{item['small']}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-10 col-md-10\\\">\\r\\n      <h4><a href=\\\"{{item['link']}}\\\">{{item['title']}}</a></h4>\\r\\n      <p>{{item['content']}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"clear\\\"></div>\\r\\n</div><!--End .article-->\\r\\n\"","module.exports = \"\"","/**\r\n * Created by mohma on 7/31/2017.\r\n */\r\nimport {Component, Input} from \"@angular/core\";\r\n@Component({\r\n  selector:'ng2-news-list',\r\n  templateUrl:'./ng2newslist.component.html',\r\n  styleUrls:['./ng2newslist.component.scss']\r\n})\r\nexport class Ng2NewsListComponent{\r\n  @Input('data') items:Array<Object>;\r\n}\r\n","/**\r\n * Created by mohma on 7/31/2017.\r\n */\r\nimport {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {Ng2NewsListComponent} from \"./ng2newslist.component\";\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations:[Ng2NewsListComponent],\r\n  exports:[Ng2NewsListComponent]\r\n})\r\nexport class Ng2NewsList{\r\n\r\n}\r\n"],"sourceRoot":""}